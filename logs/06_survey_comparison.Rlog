
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

* Project '~/Decrypted/Git/ncomms_russia_us_2016' loaded. [renv 0.15.5]
[Previously saved workspace restored]

> #!/usr/bin/env Rscript
> # coding: utf-8
> 
> #===============================================================================
> #  
> #  Tom Paskhalis, 2020-10-19
> #  Jan Zilinsky, 2020-10-07; 2021-01-14.
> #
> #  Script for comparing YouGov/SMaPP with ACS and Pew samples
> #
> #===============================================================================
> 
> library("haven")
> library("readr")
> library("dplyr")

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library("tidyr")
> 
> sessionInfo()
R version 4.1.2 (2021-11-01)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 22.04.1 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0

locale:
 [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    
 [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   
 [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices datasets  utils     methods   base     

other attached packages:
[1] tidyr_1.2.1  dplyr_1.0.10 readr_2.1.2  haven_2.5.1 

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.9       magrittr_2.0.3   hms_1.1.2        tidyselect_1.1.2
 [5] munsell_0.5.0    cowplot_1.1.1    colorspace_2.0-3 R6_2.5.1        
 [9] rlang_1.0.5      fansi_1.0.3      tools_4.1.2      grid_4.1.2      
[13] gtable_0.3.1     utf8_1.2.2       cli_3.4.0        ellipsis_0.3.2  
[17] tibble_3.1.8     lifecycle_1.0.2  zip_2.2.1        tzdb_0.3.0      
[21] purrr_0.3.4      ggplot2_3.3.6    vctrs_0.4.1      glue_1.6.2      
[25] openxlsx_4.2.5   stringi_1.7.8    compiler_4.1.2   pillar_1.8.1    
[29] forcats_0.5.2    generics_0.1.3   scales_1.2.1     renv_0.15.5     
[33] pkgconfig_2.0.3 
> 
> # Read In Data ------------------------------------------------------------
> 
> # # SMaPP/YouGov Panel
> # # Original survey
> # us2016 <- haven::read_dta("~/Dropbox/SMaPP_US2016B/survey_data/SMaPP_US2016_waves123_idist_ideo_B.dta")
> # Merged survey responses and exposure
> us2016_twitter <- readRDS("./data/Survey_Data.rds")
> 
> # ACS (US Census Bureau)
> # https://www.socialexplorer.com/tables/ACS2016/R12649774
> # Codebook: ./data/comparison_surveys/ACS_Data_Dictionary_R12649774.txt
> acs2016 <- readr::read_csv("./data/comparison_surveys/ACS/ACS_2016_1year_R12649774_SL010.csv")
Rows: 1 Columns: 2064
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr    (9): Geo_FIPS, Geo_GEOID, Geo_NAME, Geo_QName, Geo_STUSAB, Geo_SUMLEV...
dbl (2012): Geo_US, SE_A00001_001, SE_A00002_001, SE_A00002_002, SE_A00002_0...
lgl   (43): Geo_REGION, Geo_DIVISION, Geo_STATECE, Geo_STATE, Geo_COUNTY, Ge...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> # Pew
> # https://www.pewresearch.org/internet/2019/04/24/sizing-up-twitter-users/
> # Full report: ./data/comparison_surveys/Pew/twitter_opinions_4_18_final_clean.pdf
> # Data: Figure 3, page 5
> summary_pew2018 <- readr::read_csv("./data/comparison_surveys/Pew/summary_pew2018.csv")
Rows: 12 Columns: 3
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr (2): var, category
dbl (1): percentage

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> 
> # Summarize SMaPP/YouGov Panel --------------------------------------------
> 
> us2016_recoded <- us2016_twitter %>%
+   # remove respondents with no Twitter handles
+   dplyr::filter(have_twitter_data == 1) %>%
+   dplyr::mutate(
+     income = as.numeric(income),
+     non_college = ifelse(college_grad==0,1,0),
+     race = factor(dplyr::case_when(
+       race == "White" ~ "White",
+       race %in% c("Black", "Hispanic", "Other") ~ "POC"
+     ), levels = c("White", "POC")),
+     region = factor(region, levels = c("South", "Northeast", "Midwest", "West"))
+   )
> 
> summary_us2016 <- us2016_recoded %>%
+   dplyr::summarize(
+     # Sex
+     sex_male = sum(gender_female == 0),
+     sex_female = sum(gender_female),
+     # Age
+     `age_18-29` = sum(age >= 18 & age <= 29),
+     `age_30-49` = sum(age >= 30 & age <= 49),
+     `age_50-64` = sum(age >= 50 & age <= 64),
+     `age_65+` = sum(age >= 65),
+     # Education
+     `education_no college` = sum(non_college),
+     `education_college+` = sum(college_grad),
+     # Household income
+     `income_< 30,000` = sum(income_030, na.rm = TRUE),
+     `income_30,000+` = sum(income_3070, income_70120, income_120plus, na.rm = TRUE),
+     # Race
+     `race_white` = sum(race_white),
+     `race_poc` = sum(race_black, race_hispanic, race_other)
+   ) %>%
+   tidyr::pivot_longer(cols = tidyselect::everything()) %>%
+   tidyr::separate(col = "name", into = c("var", "category"), sep = "_") %>%
+   dplyr::group_by(var) %>%
+   dplyr::mutate(total = sum(value)) %>%
+   dplyr::ungroup() %>%
+   dplyr::mutate(percentage = (value/total) * 100)
> 
> 
> # Summarize ACS -----------------------------------------------------------
> 
> summary_acs2016 <- acs2016 %>%
+   dplyr::summarize(
+     # Sex
+     # Older than 18
+     sex_male = SE_A02002B_006,
+     sex_female = SE_A02002B_018,
+     # Age
+     # Older than 18
+     `age_18-29` = sum(SE_C01001_006, SE_C01001_007, SE_C01001_008, SE_C01001_009, SE_C01001_010),
+     `age_30-49` = sum(SE_C01001_011, SE_C01001_012, SE_C01001_013, SE_C01001_014),
+     `age_50-64` = sum(SE_C01001_015, SE_C01001_016, SE_C01001_017, SE_C01001_018),
+     `age_65+` = sum(SE_C01001_019, SE_C01001_020, SE_C01001_021, SE_C01001_022, SE_C01001_023, SE_C01001_024),
+     # Education
+     # Older than 25
+     `education_no college` = sum(SE_A12001_002, SE_A12001_003, SE_A12001_004),
+     `education_college+` = sum(SE_A12001_005, SE_A12001_006, SE_A12001_007, SE_A12001_008),
+     # Household income
+     `income_< 30,000` = SE_A14001A_006,
+     `income_30,000+` = SE_A14001B_006,
+     # Race
+     `race_white` = SE_A03001_002,
+     `race_poc` = sum(SE_A03001_003, SE_A03001_004, SE_A03001_005, SE_A03001_006, SE_A03001_007, SE_A03001_008)
+   ) %>%
+   tidyr::pivot_longer(cols = tidyselect::everything()) %>%
+   tidyr::separate(col = "name", into = c("var", "category"), sep = "_") %>%
+   dplyr::group_by(var) %>%
+   dplyr::mutate(total = sum(value)) %>%
+   dplyr::ungroup() %>%
+   dplyr::mutate(percentage = (value/total) * 100)
> 
> 
> # Create Survey Comparison ------------------------------------------------
> 
> # SMaPP/ACS/Pew
> survey_comparison <- summary_us2016 %>%
+   dplyr::select(var, category, percentage) %>%
+   dplyr::left_join(summary_pew2018, by = c("var", "category")) %>%
+   dplyr::left_join(summary_acs2016 %>%
+                      dplyr::select(var, category, percentage), by = c("var", "category")) %>%
+   dplyr::rename(
+     smapp = percentage.x,
+     pew = percentage.y,
+     acs = percentage
+   )
> 
> readr::write_csv(survey_comparison, "./results/06_survey_comparison/survey_comparison.csv")
> 
> # With/without Twitter
> summary_ideology <- us2016_twitter %>%
+   dplyr::mutate(
+     have_twitter_data = factor(have_twitter_data, labels = c("no_twitter_data", "twitter_data"))
+   ) %>%
+   dplyr::count(have_twitter_data, pid7) %>%
+   dplyr::mutate(pid7 = dplyr::case_when(
+     as.character(round(pid7, 3)) == "0" ~ "Strong Democrat",
+     as.character(round(pid7, 3)) == "0.167" ~ "Moderate Democrat",
+     as.character(round(pid7, 3)) == "0.333" ~ "Weak Democrat",
+     as.character(round(pid7, 3)) == "0.5" ~ "Independent",
+     as.character(round(pid7, 3)) == "0.667" ~ "Weak Republican",
+     as.character(round(pid7, 3)) == "0.833" ~ "Moderate Republican",
+     as.character(round(pid7, 3)) == "1" ~ "Strong Republican"
+   )) %>%
+   tidyr::pivot_wider(names_from = have_twitter_data, values_from = n) %>%
+   dplyr::mutate(
+     twitter_data_perc = twitter_data/sum(twitter_data) * 100,
+     no_twitter_data_perc = no_twitter_data/sum(no_twitter_data) * 100
+   ) %>%
+   dplyr::bind_rows(
+     tibble::tibble(
+       pid7 = "N",
+       no_twitter_data = NA,
+       twitter_data = NA,
+       twitter_data_perc = sum(.$twitter_data),
+       no_twitter_data_perc = sum(.$no_twitter_data)
+     )
+   ) %>%
+   # Remove NAs
+   dplyr::filter(!is.na(pid7)) %>%
+   dplyr::select(-no_twitter_data, -twitter_data)
> 
> readr::write_csv(summary_ideology, "./results/06_survey_comparison/summary_ideology.csv")
> 
> proc.time()
   user  system elapsed 
  2.271   0.671   2.803 
